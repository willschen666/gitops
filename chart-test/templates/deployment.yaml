apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.deployname }}
  namespace: istio
  labels:
    app: dpui-argocd
  annotations:
    kubesphere.io/creator: dev1
    servicemesh.kubesphere.io/enabled: 'true'
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: dpui-argocd
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: dpui-argocd
      annotations:
        sidecar.istio.io/inject: 'true'
    spec:
      volumes:
        - name: host-time
          hostPath:
            path: /etc/localtime
            type: ''
      containers:
        - name: dpui-argocd-pod
          image: {{ .Values.images.repository }}:{{ .Values.images.tag }}
          ports:
            - name: http-80
              containerPort: 80
              protocol: TCP
          resources: {}
          volumeMounts:
            - name: host-time
              readOnly: true
              mountPath: /etc/localtime
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      serviceAccountName: default
      serviceAccount: default
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600

